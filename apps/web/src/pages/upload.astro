---
import Layout from "@layouts/Layout.astro";
import { handleFile } from "../utils/upload.util";

const MAX_FILE_SIZE = 1024 * 1024; // 1MB
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const image = data.get("image");

    if (image instanceof File) {
      if (!image.type.startsWith("image/")) {
        throw new Error("Invalid file type");
      }

      if (image.size > MAX_FILE_SIZE) {
        throw new Error("File size too large");
      }
      const fileData = await handleFile(image, Astro.locals);
      console.log(fileData);
      return Astro.redirect("/gallery");
    }
  } catch {
    return Astro.redirect("/error");
  }
}
---

<Layout>
  <div class="center">
    <form method="post" enctype="multipart/form-data" action="">
      <label class="upload-box" for="file">
        <div class="show-on-submit loader"></div>
        <div class="hide-on-submit">
          <span>Click to Upload</span>
          Upload a picture to the gallery
          <input type="file" id="file" name="image" accept="image/*" />
        </div>
      </label>
    </form>
    <div class="hide-on-submit view-gallery">
      <a href="/gallery">Or click to view the Gallery</a>
    </div>
  </div>
</Layout>
<script is:inline define:vars={{ MAX_FILE_SIZE }}>
  document
    .querySelector("input[type=file]")
    ?.addEventListener?.("change", (e) => {
      if (e?.target instanceof HTMLInputElement) {
        const form = e.target.closest("form");
        if (e.target instanceof File) {
          if (!e.target.type.startsWith("image/")) {
            alert("Only images are allowed");
            form?.reset();
            return;
          }

          if (e.target.size > MAX_FILE_SIZE) {
            alert("File size too large. Max 1MB allowed");
            form?.reset();
            return;
          }
        }
        if (form) {
          form.disabled = true;
          form.classList.add("loading");
          form.submit();
        }
      }
    });
</script>
<style>
  h1 {
    margin: 0 0 1rem 0;
    padding: 0;
    font-size: 1.5rem;
  }
  .center {
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh; /* Full viewport height */
    flex-direction: column;
    padding: 10px;
    text-align: center;
    background-color: #f7f7f7; /* optional background color */
  }

  /* The clickable box (label) for file upload */
  .upload-box {
    display: block;
    border: 2px dashed #ccc;
    border-radius: 10px;
    width: 300px; /* fixed width so it doesnâ€™t shrink too much */
    padding: 2rem;
    font-size: 1.2rem;
    color: #555;
    background-color: #fff;
    cursor: pointer;
    transition:
      border-color 0.2s ease-in-out,
      background 0.2s ease-in-out;
  }

  /* Hover/focus states */
  .upload-box:hover {
    border-color: #6100ee;
    background-color: #f0f8ff; /* light highlight */
  }
  .upload-box span {
    display: block;
    font-size: 1.5rem;
    font-weight: bold;
    margin-bottom: 1rem;
  }

  /* Visually hide the real file input */
  .upload-box input[type="file"] {
    display: none;
  }
  .view-gallery {
    margin-top: 1rem;
  }
  .view-gallery a {
    color: #6100ee;
    text-decoration: none;
  }

  .loader {
    height: 4px;
    width: 100%;
    --c: no-repeat linear-gradient(#6100ee 0 0);
    background: var(--c), var(--c), #d7b8fc;
    background-size: 60% 100%;
    animation: l16 3s infinite;
  }

  .loading .hide-on-submit {
    display: none;
  }

  .show-on-submit {
    display: none;
  }
  .loading .show-on-submit {
    display: block;
  }

  @keyframes l16 {
    0% {
      background-position:
        -150% 0,
        -150% 0;
    }
    66% {
      background-position:
        250% 0,
        -150% 0;
    }
    100% {
      background-position:
        250% 0,
        250% 0;
    }
  }
</style>
